# Generated by Django 5.0.6 on 2024-05-29 12:55

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="LanguageChoice",
            fields=[
                (
                    "pt2b",
                    models.CharField(max_length=3, primary_key=True, serialize=False),
                ),
                ("name", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Langue",
                "verbose_name_plural": "Choix de langues",
            },
        ),
        migrations.CreateModel(
            name="SkillChoice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("field", models.CharField(max_length=255)),
                ("skill", models.CharField(blank=True, max_length=255)),
                ("detail", models.CharField(blank=True, max_length=255)),
                (
                    "deprecated",
                    models.BooleanField(
                        default=False,
                        help_text="Ce choix ne figure plus dans la liste des choix, mais il est conservé pour les profils qui l'ont déjà sélectionné.",
                        verbose_name="Déprécié",
                    ),
                ),
            ],
            options={
                "verbose_name": "Compétence",
                "verbose_name_plural": "Choix de compétences",
            },
        ),
        migrations.CreateModel(
            name="Member",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_admin",
                    models.BooleanField(
                        default=False,
                        help_text="Cocher cette case permet à la personne de se connecter à cette interface.",
                        verbose_name="Permissions d'administration",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Création"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Dernière modification"
                    ),
                ),
                (
                    "reviewed",
                    models.BooleanField(default=True, verbose_name="Profil validé"),
                ),
                (
                    "first_name",
                    models.CharField(
                        error_messages={
                            "blank": "Veuillez renseigner ce champ",
                            "invalid": "Veuillez renseigner une adresse e-mail valide",
                        },
                        max_length=255,
                        verbose_name="Prénom",
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        error_messages={
                            "blank": "Veuillez renseigner ce champ",
                            "invalid": "Veuillez renseigner une adresse e-mail valide",
                        },
                        max_length=255,
                        verbose_name="Nom",
                    ),
                ),
                (
                    "birth_year",
                    models.IntegerField(
                        error_messages={"blank": "Veuillez renseigner ce champ"},
                        help_text="Votre année de naissance ne sera pas visible sur votre profil. Elle sera utilisée, uniquement, pour confirmer votre identité.",
                        validators=[
                            django.core.validators.MinValueValidator(1900),
                            django.core.validators.MaxValueValidator(2024),
                        ],
                        verbose_name="Année de naissance",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        error_messages={
                            "blank": "Veuillez renseigner ce champ",
                            "email": "Veuillez renseigner une adresse e-mail valide",
                        },
                        max_length=254,
                        unique=True,
                        verbose_name="E-mail",
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("F", "Femme"),
                            ("M", "Homme"),
                            (
                                "X",
                                "Je ne me reconnais comme aucun des genres ci-dessus",
                            ),
                        ],
                        help_text="Permettre d'afficher le genre sur les profils est un parti pris de l'équipe qui a développé l'annuaire. Cette démarche vise à favoriser la parité, en facilitant la recherche de profils féminins. ",
                        max_length=100,
                        verbose_name="Genre",
                    ),
                ),
                (
                    "photo",
                    models.ImageField(
                        blank=True, upload_to="photos/", verbose_name="Photo"
                    ),
                ),
                (
                    "short_bio",
                    models.CharField(
                        blank=True,
                        help_text='Exemple : "Je travaille à la collecte, l’indexation et l’analyse automatique de grands volumes de données."',
                        max_length=200,
                        verbose_name="Phrase de description",
                    ),
                ),
                (
                    "institution",
                    models.CharField(
                        error_messages={
                            "blank": "Veuillez renseigner ce champ",
                            "invalid": "Veuillez renseigner une adresse e-mail valide",
                        },
                        max_length=255,
                        verbose_name="Institution de rattachement",
                    ),
                ),
                (
                    "institution_city",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        verbose_name="Ville de l'institution",
                    ),
                ),
                (
                    "main_activity",
                    models.CharField(
                        blank=True,
                        help_text='Nous vous encourageons à mettre en avant votre fonction spécifique, indépendamment de votre statut officiel. Exemple : "Responsable de projets numériques".',
                        max_length=255,
                        verbose_name="Fonction principale",
                    ),
                ),
                ("long_bio", models.TextField(blank=True, verbose_name="Biographie")),
                (
                    "additional_skills",
                    models.CharField(
                        blank=True,
                        help_text="Si vous avez des compétences qui ne figurent pas dans la liste ci-dessus, renseignez-les dans ce champ. Votre contribution nous permettra d'enrichir notre arbre des compétences. Veuillez cependant vous assurer que la compétence n'est pas déjà renseignée avant de faire cette demande d'ajout.",
                        max_length=255,
                        verbose_name="Compétences supplémentaires",
                    ),
                ),
                (
                    "publications",
                    models.TextField(blank=True, verbose_name="Publications"),
                ),
                (
                    "training",
                    models.TextField(blank=True, verbose_name="Formations suivies"),
                ),
                ("comments", models.TextField(blank=True, verbose_name="Commentaires")),
                (
                    "languages",
                    models.ManyToManyField(
                        blank=True,
                        to="annuaire.languagechoice",
                        verbose_name="Langues parlées",
                    ),
                ),
                (
                    "expertise",
                    models.ManyToManyField(
                        error_messages={
                            "required": "Veuillez renseigner au moins un domaine d'expertise"
                        },
                        limit_choices_to=models.Q(("skill", "")),
                        related_name="+",
                        to="annuaire.skillchoice",
                        verbose_name="Domaines d'expertise",
                    ),
                ),
                (
                    "skills",
                    models.ManyToManyField(
                        error_messages={
                            "required": "Veuillez renseigner au moins une compétence"
                        },
                        limit_choices_to=models.Q(("skill", ""), _negated=True),
                        related_name="+",
                        to="annuaire.skillchoice",
                        verbose_name="Compétences",
                    ),
                ),
            ],
            options={
                "verbose_name": "Membre",
                "verbose_name_plural": "Membres",
            },
        ),
    ]
